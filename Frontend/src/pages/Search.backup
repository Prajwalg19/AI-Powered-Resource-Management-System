import axios from "../interceptors/axios";
import { createContext, useState } from "react";
import { AiOutlineSearch } from "react-icons/ai";
import Filter from "../Components/Filter";
export const DateContext = createContext();
function Search() {
    const [didFind, setDidFind] = useState(true);
    const [searchStr, setStr] = useState("");
    const [result, setResult] = useState([]);
    const [descPanel, setDescPanel] = useState(false);
    async function SearchIt(e) {
        setDescPanel(false);
        e.preventDefault();
        if (searchStr == "") return;
        setDidFind(true);
        const response = await axios.get(`api/search/?query=${searchStr}`);
        let res = Object.entries(response.data);
        let ans = res.filter((item) => {
            if (item[1].length !== 0) {
                return true;
            }
        });

        setResult(ans);

        if (ans.length === 0) {
            setDidFind(false);
        }
    }
    function updateContext(result) {
        setResult(result);
    }
    function descDisplay(desc) {
        setDescPanel({ panel: true, value: desc });
    }
    return (
        <>
            <main className="flex flex-col items-center w-full max-w-6xl px-3 py-2 mx-auto">
                <form className="flex items-center justify-center w-full my-8 space-x-3 ">
                    <input type="text" onChange={(e) => setStr(e.target.value)} placeholder="Search" className="w-[20%] border-gray-300 rounded-md" />
                    <button type="submit" className="" onClick={SearchIt}>
                        <AiOutlineSearch />
                    </button>
                    <DateContext.Provider value={{ result, updateContext }}>
                        <Filter />
                    </DateContext.Provider>
                </form>

                {didFind ? (
                    result?.map((bigArray, index) => (
                        <table key={index} className="flex flex-col items-center justify-between w-full mt-3 mb-6 border-x-0 border-y-0 ">
                            {bigArray[1].length != 0 && <caption className="flex justify-center w-full py-2 text-lg font-bold capitalize">{bigArray[0]}</caption>}
                            <tbody className="">
                                <tr>
                                    {bigArray[1].length != 0 &&
                                        Object.keys(bigArray[1][0])?.map((header, index) => (
                                            <th className="px-2 text-center" key={index}>
                                                {header}
                                            </th>
                                        ))}
                                </tr>
                                {bigArray[1].map((miniArray, index) => (
                                    <tr key={index} className="">
                                        {Object.values(miniArray).map((obj, index) => (
                                            <td
                                                className={`px-2 text-center ${(Object.keys(miniArray)[index].toLowerCase() === "description".toLowerCase() || Object.keys(miniArray)[index].toLowerCase() === "details".toLowerCase()) && "cursor-pointer"}`}
                                                onClick={() => {
                                                    (Object.keys(miniArray)[index].toLowerCase() === "details" || Object.keys(miniArray)[index].toLowerCase() === "description") && descDisplay(obj);
                                                }}
                                                key={index}
                                            >
                                                {Object.keys(miniArray)[index].toLowerCase() === "description" || Object.keys(miniArray)[index].toLowerCase() === "details" ? "click here" : obj}
                                            </td>
                                        ))}
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    ))
                ) : (
                    <div className="text-lg">No such entries found</div>
                )}
                {descPanel?.panel ? <div>{descPanel.value}</div> : ""}
            </main>
        </>
    );
}

export default Search;
